export default {
  '.babelrc': 'Configuration file for babel transpiler, see https://babeljs.io/docs/en/index.html',
  '.editorconfig': 'Editors can load this to adjust config, see https://editorconfig.org/',
  '.electron-vue': 'Scripts used to build the Vue part of the app (webpack)',
  '.electron-vue/dev-client.js': 'Builds development version',
  '.electron-vue/dev-runner.js': 'Builds development version',
  '.electron-vue/webpack.main.config.js': 'Builds electron main',
  '.electron-vue/webpack.renderer.config.js': 'Builds electron renderer',
  '.electron-vue/webpack.web.config.js': 'Builds web version',
  '.eslintignore': 'ESLint ignore file, see https://eslint.org/docs/user-guide/configuring',
  '.eslintrc.js': 'ESLint configuration file, see https://eslint.org/docs/user-guide/configuring',
  '.mocharc.json': 'Mocha test runner config, see https://mochajs.org/',
  '.scripts': 'Scripts used for CI / deployment',
  '.scripts/_ci.js': 'Environment detection across CI providers',
  '.scripts/_utils.js': 'Utility functions',
  '.scripts/deploy.js': 'Script for automatic deployment',
  '.travis.yml': 'Configuration file for Travis CI, see https://docs.travis-ci.com/',
  'README.md': 'Please read me!',
  'appveyor.yml': 'Configuration file for AppVeyor CI, see https://www.appveyor.com/docs/appveyor-yml/',
  'package-lock.json': 'Used to track installed dependency versions, see https://docs.npmjs.com/files/package-lock.json',
  'package.json': 'NPM project configuration file, see https://docs.npmjs.com/files/package.json',
  'server': 'Contains all server-side code needed for the web version',
  'src': 'Contains all code needed to build the client application (both electron and web)',
  'src/common': '',
  'src/common/backend': '',
  'src/common/backend/execute.js': '',
  'src/common/backend/interface.js': '',
  'src/common/util': '',
  'src/common/util/is-empty-folder.js': '',
  'src/config': 'Contains files with values only adjustable at build-time',
  'src/config/constants.js': '',
  'src/config/paths.js': 'Paths and path patterns of Dynare/MATLAB/Octave and MMB file locations',
  'src/index.ejs': '',
  'src/main': 'Contains files used in electron\'s main process',
  'src/main/index.dev.js': 'Entry point of electron\'s main process during development',
  'src/main/index.js': 'Entry point of electron\'s main process',
  'src/renderer': 'Contains files used in electron\'s renderer process (i.e. the part that you see)',
  'src/renderer/App.vue': 'Vue root component',
  'src/renderer/assets': 'Static content (Vue level))',
  'src/renderer/assets/fonts': '',
  'src/renderer/assets/fonts/rajdhani-v7-latin-500.woff': '',
  'src/renderer/assets/fonts/rajdhani-v7-latin-500.woff2': '',
  'src/renderer/assets/fonts/roboto-v18-latin-300.woff': '',
  'src/renderer/assets/fonts/roboto-v18-latin-300.woff2': '',
  'src/renderer/assets/fonts/roboto-v18-latin-700.woff': '',
  'src/renderer/assets/fonts/roboto-v18-latin-700.woff2': '',
  'src/renderer/assets/images': '',
  'src/renderer/assets/images/logo.png': '',
  'src/renderer/components': '',
  'src/renderer/components/Chart.vue': 'Wraps a HighCharts instance',
  'src/renderer/components/ChartLegend.vue': 'Wraps HighCharts instance to display common legend',
  'src/renderer/components/ChartRow.vue': 'A set of charts, row is misleading because it can wrap around',
  'src/renderer/components/ColsPerRow.vue': 'Slider for adjusting max cols (charts) per row',
  'src/renderer/components/Comparison.vue': 'Comparison section',
  'src/renderer/components/DataOrder.vue': 'Dropdown selection of data grouping modes',
  'src/renderer/components/Gain.vue': 'Adjustment of gain parameter',
  'src/renderer/components/HomePage.vue': 'The main page',
  'src/renderer/components/Horizon.vue': 'Adjustment of horizon parameter',
  'src/renderer/components/ModelList.vue': 'A list of models',
  'src/renderer/components/ModelPopover.vue': 'Popover component for model description',
  'src/renderer/components/ModelSearch.vue': 'Text input for model search',
  'src/renderer/components/Models.vue': 'Set of model lists',
  'src/renderer/components/OcpHeader.vue': 'Header section',
  'src/renderer/components/Options.vue': 'Options section',
  'src/renderer/components/PolicyRules.vue': 'List of policy rules',
  'src/renderer/components/RulePopover.vue': 'Popover component for rule description',
  'src/renderer/components/SaveData.vue': 'CSV and JSON download buttons',
  'src/renderer/components/Shocks.vue': 'List of shocks',
  'src/renderer/components/Variables.vue': 'List of variables',
  'src/renderer/components/Variances.vue': 'Table of variances',
  'src/renderer/data': '',
  'src/renderer/data/orders.js': 'Data grouping orders',
  'src/renderer/data/params.json': 'Policy params',
  'src/renderer/data/shocks.json': 'Common (always on top) shocks',
  'src/renderer/data/variables.json': 'Common (always on top) variables',
  'src/renderer/global.scss': 'Global stylesheets',
  'src/renderer/google-fonts.scss': 'Stylesheets for loading local version of google fonts',
  'src/renderer/main.js': 'Electron renderer process entry point',
  'src/renderer/modals': 'Contains all sorts of components displayed as modals',
  'src/renderer/modals/HelpModal.vue': '',
  'src/renderer/modals/MatlabOutputModal.vue': 'Modal displayed during simulation',
  'src/renderer/modals/ModelStates.vue': 'Selection list of states of a model',
  'src/renderer/modals/ModelStatesModal.vue': 'Modal with state selection for all AL models',
  'src/renderer/modals/UserSpecifiedRuleModal.vue': 'Modal to adjust user specific policy rule',
  'src/renderer/modals/editor': 'All files needed for the file editor',
  'src/renderer/modals/editor/DirectoryView': 'Files needed for the editor directory view',
  'src/renderer/modals/editor/DirectoryView/DirectoryView.vue': '',
  'src/renderer/modals/editor/DirectoryView/Tree.vue': 'Directory tree component',
  'src/renderer/modals/editor/DirectoryView/TreeItem.vue': 'Single item in directory tree',
  'src/renderer/modals/editor/EditorModal.vue': 'File editor modal',
  'src/renderer/modals/editor/MonacoEditor.js': 'Vue wrapper for monaco editor',
  'src/renderer/modals/editor/monaco.js': 'Monaco editor language support is set up here',
  'src/renderer/modals/settings': 'All files needed for the settings modal',
  'src/renderer/modals/settings/BackendSelection.vue': 'Path selection for MATLAB/Octave',
  'src/renderer/modals/settings/CompatibilityTest': 'Files for compatibility test',
  'src/renderer/modals/settings/CompatibilityTest/CompatibilityTest.vue': 'Compatibility test button',
  'src/renderer/modals/settings/CompatibilityTest/config.test-al.json': 'Configuration skeleton for AL compatibility test',
  'src/renderer/modals/settings/CompatibilityTest/config.test.json': 'Configuration skeleton for non-AL compatibility test',
  'src/renderer/modals/settings/DynareSelection.vue': 'Path selection for dynare',
  'src/renderer/modals/settings/MmbPathSelection.vue': 'Path selection for MMB files',
  'src/renderer/modals/settings/SettingsModal.vue': 'Settings modal',
  'src/renderer/plugins': 'Vue plugin configuration files',
  'src/renderer/plugins/bootstrap.js': '',
  'src/renderer/plugins/chatscroll.js': '',
  'src/renderer/plugins/highcharts.js': '',
  'src/renderer/store': 'Files used for the vuex-store',
  'src/renderer/store/index.js': '',
  'src/renderer/store/modules': 'Vuex modules',
  'src/renderer/store/modules/compare': 'Files for getting the necessary comparison data',
  'src/renderer/store/modules/compare/electron': 'Functions for electron version',
  'src/renderer/store/modules/compare/electron/capture-backend-exception.js': 'Logs exceptions thrown by MATLAB/Octave via Sentry',
  'src/renderer/store/modules/compare/electron/compare.electron.js': 'Gets simulation data from MATLAB/Octave',
  'src/renderer/store/modules/compare/electron/normalize-error.js': 'Normalizes MATLAB/Octave exceptions',
  'src/renderer/store/modules/compare/electron/read-output.js': 'Reads and processes MATLAB/Octave json outputs',
  'src/renderer/store/modules/compare/index.js': 'Selects and reexports data fetching functions depending on platform (electron/web)',
  'src/renderer/store/modules/compare/web': 'Functions for web version',
  'src/renderer/store/modules/compare/web/compare.web.js': 'Gets simulation data from the API',
  'src/renderer/store/modules/comparison.js': 'Gathers and transforms comparison data',
  'src/renderer/store/modules/backends.js': 'Handles selection of MATLAB/Octave (Electron only)',
  'src/renderer/store/modules/dynare.js': 'Handles selection of dynare (Electron only)',
  'src/renderer/store/modules/settings.js': 'Settings module (Electron only)',
  'src/renderer/store/modules/userrule.js': 'Userrule module (Electron only)',
  'src/renderer/store/modules/models.js': 'Handles model selection',
  'src/renderer/store/modules/options.js': 'Handles comparison option selection',
  'src/renderer/store/modules/params.js': 'Handles user rule settings (i.e. parameter selection)',
  'src/renderer/store/modules/rules.js': 'Handles rule selection',
  'src/renderer/store/modules/search.js': 'Handles search',
  'src/renderer/store/modules/ui.js': 'Touch/mouse based aspects of UI',
  'src/renderer/store/persisted-state.js': 'Selects parts of the application state and persists them across sessions',
  'src/renderer/store/store.electron.js': 'Electron specific Vuex configuration',
  'src/renderer/store/store.web.js': 'Web specific Vuex configuration',
  'src/renderer/utils': 'Contains various utility functions',
  'src/renderer/utils/chunkArray.js': 'Chunks an array into smaller pieces of specified size',
  'src/renderer/utils/intersection.js': 'Finds elements common across arrays',
  'src/renderer/utils/getDirectoryTree.js': 'Recursively crawls a directory and builds a JSON tree',
  'src/renderer/utils/logger.js': 'Exposes winston logger',
  'src/renderer/utils/partition.js': 'Splits an array into two by using a predicate function',
  'src/renderer/utils/resize.js': 'Processes window resize events',
  'src/renderer/utils/responsive-value.js': 'Select values based on view size',
  'src/renderer/utils/scrollIntoView.js': 'Scrolling helper function',
  'src/renderer/utils/sortSeries.js': 'Sorts series by id',
  'src/renderer/utils/storage.js': 'Creates electron storage',
  'src/renderer/utils/userid.js': 'Generates and persists unique user id',
  'src/schemas': 'Contains JSON schemas to validate JSON based input',
  'src/schemas/common.schema.json': 'Contains schema definitions',
  'src/schemas/config.schema.json': 'Schema for JSON config validation',
  'src/schemas/model.schema.json': 'Schema for JSON model data validation',
  'src/schemas/rule.schema.json': 'Schema for JSON rule data validation',
  'src/worker': 'All code that can run in a web worker, i.e. a separate thread',
  'src/worker/backend': '',
  'src/worker/backend/is-executable.js': '',
  'src/worker/backend/scan-for-backends.js': 'Scans path patterns for MATLAB/Octave installations',
  'src/worker/data': '',
  'src/worker/data/load-models.js': 'Finds and loads all models found in a folder',
  'src/worker/data/load-rules.js': 'Finds and loads all rules found in a folder',
  'src/worker/dynare': '',
  'src/worker/dynare/get-dynare-version.js': 'Tries to get dynare version located in a certain path',
  'src/worker/dynare/scan-for-dynare.js': 'Scans path patterns for Dynare installations',
  'src/worker/index.js': '',
  'src/worker/util': '',
  'src/worker/util/ajv.js': 'Sets up an AJV instance (schema validation)',
  'src/worker/util/async.js': 'Various asynchronous array functions',
  'src/worker/util/find-paths.js': 'Finds path matching a glob pattern',
  'src/worker/util/serializable-error.js': 'Processes errors to make them serializable',
  'src/worker/worker.js': 'Worker entry point',
  'static': 'All static content (electron level)',
  'static/logo.png': '',
  'static/mmci-cli': 'Contains all MMB MATLAB/Octave code',
  'static/mmci-cli/.editorconfig': 'Editors can load this to adjust config, see https://editorconfig.org/',
  'static/mmci-cli/config.example-al-states.json': 'Example MMB configuration file with AL state selection',
  'static/mmci-cli/config.example-usr.json': 'Example MMB configuration file with user specified rule',
  'static/mmci-cli/config.json': 'Example MMB configuration file',
  'static/mmci-cli/docs': '',
  'static/mmci-cli/docs/Dynare install commands': '',
  'static/mmci-cli/docs/MMB_MPrule_description.pdf': '',
  'static/mmci-cli/docs/MMB_model_description.pdf': '',
  'static/mmci-cli/docs/readme_USR.pdf': '',
  'static/mmci-cli/lib': '',
  'static/mmci-cli/lib/ALTOOL': '',
  'static/mmci-cli/lib/ALTOOL/BetaFromTR.m': '',
  'static/mmci-cli/lib/ALTOOL/Model_database_AL_progress_report.pdf': '',
  'static/mmci-cli/lib/ALTOOL/TRFromBeta.m': '',
  'static/mmci-cli/lib/ALTOOL/dr1_AL.m': '',
  'static/mmci-cli/lib/ALTOOL/funeval.m': '',
  'static/mmci-cli/lib/ALTOOL/funeval_states.m': '',
  'static/mmci-cli/lib/ALTOOL/funeval_states_subset.m': '',
  'static/mmci-cli/lib/ALTOOL/get_nvars_state_space.m': '',
  'static/mmci-cli/lib/ALTOOL/irf_AL_alt_gain.m': '',
  'static/mmci-cli/lib/ALTOOL/loc.m': '',
  'static/mmci-cli/lib/ALTOOL/menu_AL_select_states.m': '',
  'static/mmci-cli/lib/ALTOOL/menu_AL_select_subset.m': '',
  'static/mmci-cli/lib/ALTOOL/resol_MMB.m': '',
  'static/mmci-cli/lib/ALTOOL/save_gain.m': '',
  'static/mmci-cli/lib/ALTOOL/selectgain.m': '',
  'static/mmci-cli/lib/ALTOOL/sim_AL_alt_gain.m': '',
  'static/mmci-cli/lib/ALTOOL/stochastic_solvers_AL_Dynare_43.m': '',
  'static/mmci-cli/lib/ALTOOL/stochastic_solvers_MMB.m': '',
  'static/mmci-cli/lib/ALTOOL/ver_greater_than.m': '',
  'static/mmci-cli/lib/assert_compatibility.m': 'Checks MATLAB/Octave and Dynare version compatibility',
  'static/mmci-cli/lib/default.m': 'Try to get member of struct or return default value',
  'static/mmci-cli/lib/expect.m': 'For testing, compares expected and actual values',
  'static/mmci-cli/lib/get_output_filename.m': 'Creates filename from model and rule name',
  'static/mmci-cli/lib/get_states.m': 'Loads states from config or model data',
  'static/mmci-cli/lib/jsonlab': 'JSONLab library, see https://github.com/fangq/jsonlab',
  'static/mmci-cli/lib/load_coeffs.m': 'Loads coefficients from config or rule',
  'static/mmci-cli/lib/load_config.m': 'Loads configuration from JSON',
  'static/mmci-cli/lib/load_dynare.m': 'Loads dynare from specified path',
  'static/mmci-cli/lib/load_models.m': 'Loads models from model folder',
  'static/mmci-cli/lib/load_rules.m': 'Loads rules from rules folder',
  'static/mmci-cli/lib/make_modelbase.m': 'Creates legacy modelbase object to reuse logic of MMB 2.1',
  'static/mmci-cli/lib/make_policy_params.m': 'Save policy params in a .mat file, so models can load them',
  'static/mmci-cli/lib/make_rule.m': 'Construct a rule struct with name and coefficients',
  'static/mmci-cli/lib/print_error.m': 'Prints an error to the console',
  'static/mmci-cli/lib/round_to.m': 'Rounds number to n decimals',
  'static/mmci-cli/lib/run_dynare_and_simulate.m': 'Processes the model file with dynare and starts simulation',
  'static/mmci-cli/lib/run_model_with_rules.m': 'Prepares model files to run it with certain rules',
  'static/mmci-cli/lib/save_error.m': 'Saves an error to error.json',
  'static/mmci-cli/lib/save_result.m': 'Reads results from modelbase object and saves it in the appropriate JSON file',
  'static/mmci-cli/lib/stoch_simul_MMB.m': 'Simulates model',
  'static/mmci-cli/lib/struct_from_names_and_values.m': 'combines two vectors (field names and values) of equal length to a struct',
  'static/mmci-cli/mmb.m': 'MMB main file',
  'static/mmci-cli/models': 'Contains all model files',
  'static/mmci-cli/models/AA_EXAMPLE00': 'Contains all files of the AA_EXAMPLE00 model',
  'static/mmci-cli/models/AA_EXAMPLE00/AA_EXAMPLE00.json': 'Model metadata, like available variables and shocks',
  'static/mmci-cli/models/AA_EXAMPLE00/AA_EXAMPLE00.mod': 'Dynare model file',
  'static/mmci-cli/models/alter-model.js': 'Helper script to modify model metadata',
  'static/mmci-cli/models/extract-var-names.js': 'Helper script to extract a models\' variables and shocks from the dynare model file',
  'static/mmci-cli/out': 'Contains MATLAB/Octave output. Regenerated on every run.',
  'static/mmci-cli/rules': 'Contains all rule files',
  'static/mmci-cli/rules/EXAMPLE': 'Contains all files of the EXAMPLE rule',
  'static/mmci-cli/rules/EXAMPLE/EXAMPLE.json': 'Contains EXAMPLE rule\'s JSON metadata',
  'static/mmci-cli/test': 'Contains configuration files for compatibility test',
  'static/mmci-cli/test/config.test-al.json': 'AL model compatibility test configuration',
  'static/mmci-cli/test/config.test.json': 'non-AL model compatibility test configuration',
  'static/mmci-cli/test.m': 'MATLAB/Octave/Dynare compatibility test',
  'static/mmci-cli/work': 'For simulation, model files are copied here. Regenerated on every run.',
  'test': 'Contains files for running tests with mocha',
  'test/backend.js': '',
  'test/models.js': '',
  'test/rules.js': '',
  'test/utils': '',
  'test/utils/backend.js': '',
  'test/utils/matlab-code.js': '',
  'test/utils/models.js': '',
  'test/utils/rules.js': '',
};
